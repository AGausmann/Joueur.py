# Generated by Creer, git hash Error: git probably not installed
# This is a simple class to represent the Game object in the game. You can extend it by adding utility functions here in this file.

from baseGame import BaseGame

# import game objects
from Checkers.checker import Checker
from Checkers.player import Player
from Checkers.gameObject import GameObject

# @class Game: The simple version of American Checkers. An 8x8 board with 12 checkers on each side that much move diagonally to the opposing side. Very simple.
class Game(BaseGame):
    ## initializes a Game with basic logic as provided by the Creer code generator
    # @param dict data: initialization data
    def __init__(self, data):
        BaseGame.__init__(self, data)

        self.checkers = (data['checkers'] if 'checkers' in data else [])
        self.checker_moved = (data['checkerMoved'] if 'checkerMoved' in data else None)
        self.board_width = int(data['boardWidth'] if 'boardWidth' in data else 8)
        self.checker_moved_jumped = bool(data['checkerMovedJumped'] if 'checkerMovedJumped' in data else False)
        self.current_turn = int(data['currentTurn'] if 'currentTurn' in data else 0)
        self.game_objects = (data['gameObjects'] if 'gameObjects' in data else {})
        self.current_players = (data['currentPlayers'] if 'currentPlayers' in data else [])
        self.max_turns = int(data['maxTurns'] if 'maxTurns' in data else 100)
        self.current_player = (data['currentPlayer'] if 'currentPlayer' in data else None)
        self.board_height = int(data['boardHeight'] if 'boardHeight' in data else 8)
        self.players = (data['players'] if 'players' in data else [])

        self.name = "Checkers"

        self._game_object_classes = {
            'Checker': Checker,
            'Player': Player,
            'GameObject': GameObject
        }

