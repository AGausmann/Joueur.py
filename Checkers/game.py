# Generated by Creer at 02:40AM on May 05, 2015 UTC, git hash: 'Error: git probably not installed'
# This is a simple class to represent the Game object in the game. You can extend it by adding utility functions here in this file.

from baseGame import BaseGame

# import game objects
from Checkers.player import Player
from Checkers.checker import Checker
from Checkers.gameObject import GameObject

class Game(BaseGame):
    """ The class representing the Game in the Checkers game.

    The simple version of American Checkers. An 8x8 board with 12 checkers on each side that must move diagonally to the opposing side until kinged. Very simple.
    """

    def __init__(self, data):
        """ initializes a Game with basic logic as provided by the Creer code generator

        Args:
            data (dict): initialization data
        """
        BaseGame.__init__(self, data)

        # The following values should get overridden when delta states are merged, but we set them here as a reference for you to see what variables this class has.

        # The current turn number, starting at 0 for the first player's turn
        self.current_turn = None
        # The player whose turn it is currently. That player can send commands. Other players cannot.
        self.current_player = None
        # The width of the board for X component of a checker.
        self.board_width = None
        # The height of the board for the Y component of a checker.
        self.board_height = None
        # All the checkers currently in the game.
        self.checkers = []
        # The maximum number of turns before the game will automatically end.
        self.max_turns = None
        # A mapping of every game object's ID to the actual game object. Primarily used by the server and client to easily refer to the game objects via ID.
        self.game_objects = {}
        # List of all the players in the game.
        self.players = []
        # If the last checker that moved jumped, meaning it can move again.
        self.checker_moved_jumped = False
        # The checker that last moved and must be moved because only one checker can move during each players turn.
        self.checker_moved = None

        self.name = "Checkers"

        self._game_object_classes = {
            'Player': Player,
            'Checker': Checker,
            'GameObject': GameObject
        }

