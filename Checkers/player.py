# Generated by Creer at 03:55PM on April 26, 2015 UTC, git hash: '2acbba9c4b682c4de68840c1ca9bec631e9c635f'
# This is a simple class to represent the Player object in the game. You can extend it by adding utility functions here in this file.

from utilities import make_command
from Checkers.gameObject import GameObject


# @class Player: A player in this game. Every AI controls one player.
class Player(GameObject):
    # initializes a Player with basic logic as provided by the Creer code generator
    def __init__(self):
        GameObject.__init__(self)


        # The following values should get overridden when delta states are merged, but we set them here as a reference for you to see what variables this class has.

        # if the player lost the game or not
        self.lost = False
        # What type of client this is, e.g. 'Python', 'JavaScript', or some other language. For potential data mining purposes.
        self.client_type = ""
        # The name of the player
        self.name = "Anonymous"
        # the reason why the player won the game
        self.reason_won = ""
        # The amount of time (in ms) remaining for this AI to send commands.
        self.time_remaining = 0
        # if the player won the game or not
        self.won = False
        # The direction your checkers must go along the y-axis until kinged
        self.y_direction = 0
        # the reason why the player lost the game
        self.reason_lost = ""
        # All the checkers currently in the game owned by this player
        self.checkers = []



    ## Tells the server that this player is done with their turn.
    def end_turn(self):
        return make_command(self, 'endTurn')
