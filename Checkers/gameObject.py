# Generated by Creer at 02:40AM on May 05, 2015 UTC, git hash: 'Error: git probably not installed'
# This is a simple class to represent the GameObject object in the game. You can extend it by adding utility functions here in this file.

from baseGameObject import BaseGameObject


class GameObject(BaseGameObject):
    """ The class representing the GameObject in the Checkers game.

    An object in the game. The most basic class that all game classes should inherit from automatically.
    """

    def __init__(self, data):
        """ initializes a GameObject with basic logic as provided by the Creer code generator

        Args:
            data (dict): initialization data
        """
        BaseGameObject.__init__(self, data)

        # The following values should get overridden when delta states are merged, but we set them here as a reference for you to see what variables this class has.

        # A unique id for each instance of a GameObject or a sub class. Used for client and server communication. Should never change value after being set.
        self.id = ""
        # Any strings logged will be stored here when this game object logs the strings. Intended for debugging.
        self.logs = []



    def log(self, message):
        """ adds a message to this game object's log. Intended for debugging purposes.

        Args:
            message (str): A string to add to this GameObject's log. Intended for debugging.
        """
        return self.run_on_server('log', message=message)
